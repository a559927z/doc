<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace必须指向Dao接口 -->
<mapper namespace="net.chinahrd.employeePerformance.mvc.app.dao.MobilePerChangeDao">
	<cache-ref namespace="net.chinahrd.ehcache.normal"/>

    <select id="queryHighLowPreByMonth" resultType="net.chinahrd.entity.dto.app.performance.PerfChangeCardDto"
            parameterType="net.chinahrd.entity.dto.app.performance.PerfChangeQueryDto" useCache="true">
        SELECT 
           SUM(CASE WHEN (per.curt_name BETWEEN #{highL} AND #{highH}) THEN 1 ELSE 0 END) as highCount,
		   SUM(CASE WHEN (per.curt_name BETWEEN #{lowL} AND #{lowH}) THEN 1 ELSE 0 END) as lowCount
        FROM v_dim_emp vde
        INNER JOIN performance_change pc ON vde.customer_id = pc.customer_id AND vde.emp_id = pc.emp_id  AND vde.organization_id = pc.organization_id
            AND pc.`year_month` = #{yearMonth} AND pc.`type` = #{preWeek}
        INNER JOIN dim_performance per
		ON  pc.performance_id=per.performance_id AND per.customer_id = pc.customer_id 
        WHERE vde.customer_id = #{customerId}
        AND vde.organization_id IN (
            SELECT t1.organization_id
            FROM dim_organization t1
            WHERE t1.customer_id = vde.customer_id
            AND	locate(
                (
                SELECT t.full_path
                FROM dim_organization t
                WHERE t.customer_id = t1.customer_id
                AND t.organization_id = #{organizationId}
                ),
                t1.full_path
            )
        )
    </select>
    
   
    <select id="queryPreYearMonthByCustomerId" resultType="java.lang.Integer"  useCache="true">
		select DISTINCT t.year_month from
		 performance_change t where	t.customer_id=#{customerId} AND `type` = #{perWeek}
		 ORDER BY t.year_month desc
	</select>

    <select id="queryPreChangeCountByMonth" resultType="net.chinahrd.entity.dto.app.performance.PreChangeStatusDto"  useCache="true">
        select
        sum(case when d.performance_key>d2.performance_key then 1 ELSE 0 end) as rise
        ,sum(case when d2.performance_key>d.performance_key then 1 ELSE 0 end) as down
        ,sum(case when d.performance_key=d2.performance_key then 1 ELSE 0 end) as equal
        from performance_change t
        inner JOIN performance_change t2 on t2.customer_id=t.customer_id
        AND t2.`type` = #{preWeek} and t2.emp_id=t.emp_id and t2.year_month=#{beginYearMonth}
        left JOIN dim_performance d on d.customer_id=t.customer_id and d.performance_id=t.performance_id
        left join dim_performance d2 on d2.customer_id=t2.customer_id and d2.performance_id=t2.performance_id
        where t.year_month=#{endYearMonth}
        AND t.`type` = #{preWeek}
        and t.organization_id IN
        (
        SELECT t1.organization_id FROM dim_organization t1
        WHERE
        locate(
        (
        SELECT t.full_path FROM dim_organization t
        WHERE t.organization_id = #{organizationId}
        AND t.customer_id = #{customerId}
        ), t1.full_path
        )
        AND t1.customer_id = #{customerId}
        )
        AND t.customer_id = #{customerId}
        <if test="changeNum != null and changeNum > 1">
            -- 查询变化在两级以上的人
            and abs(d.performance_key-d2.performance_key)>=#{changeNum}
        </if>
    </select>


   

    
    <select id="queryPreStarCountByMonth" resultType="net.chinahrd.entity.dto.app.performance.PreStarCountDto"  useCache="true">
		select d.performance_key as performanceKey
			 , sum(CASE when s.curt_name ='M' then 1 else 0 end) as mgrCount
			 , sum(CASE when s.curt_name !='M' then 1 else 0 end) as notMgrCount
			 ,count(e.emp_id) as joinCount
			 ,d.performance_name as performanceName
			 from dim_performance d  
			 LEFT JOIN performance_change t on d.customer_id=t.customer_id and d.performance_id=t.performance_id
			 		AND t.`type` = #{preWeek} 
			 		and t.year_month=#{yearMonth}  
				 	and t.organization_id IN
						(
							SELECT t1.organization_id FROM dim_organization t1
							WHERE
								locate(
									(
										SELECT t.full_path FROM dim_organization t
										WHERE t.organization_id = #{organizationId}
										AND t.customer_id = #{customerId}
									), t1.full_path
								)
							AND t1.customer_id = #{customerId}
						)
			left JOIN v_dim_emp e on t.customer_id=e.customer_id and e.emp_id=t.emp_id 
			left join dim_sequence s on s.customer_id=t.customer_id and s.sequence_id=e.sequence_id
			where d.customer_id = #{customerId}
			GROUP BY d.performance_key,d.performance_name
			ORDER BY d.performance_key
	</select>

    <!--获取个人绩效明细数据 -->
    <select id="queryPerformanceDetail" resultType="net.chinahrd.entity.dto.app.performance.PreDetailDto"  useCache="true">
        SELECT
            vde.emp_id AS empId,
            vde.user_name_ch AS userNameCh,
            vde.position_name AS positionName,
            vde.sequence_name AS sequenceName,
            vde.organization_name AS organizationName,
            vde.ability_name AS abilityName,
            vde.rank_name AS rankName,
            vde.performance_id AS performanceId,
            p1.performance_name AS performanceName1,
            p2.performance_name AS performanceName2,
            p3.performance_name AS performanceName3,
            dp.performance_key AS performanceKey
        FROM v_dim_emp vde
        INNER JOIN performance_change p1 ON vde.customer_id = p1.customer_id
        AND vde.emp_id = p1.emp_id
        AND p1.YEAR_MONTH = #{yearMonth1}
        AND p1.`type` = #{preWeek}
        INNER JOIN dim_performance dp ON dp.customer_id = vde.customer_id
        AND p1.performance_id = dp.performance_id
        LEFT JOIN performance_change p2 ON vde.customer_id = p2.customer_id
        AND vde.emp_id = p2.emp_id
        AND vde.organization_id = p2.organization_id
        AND p2.`type` = #{preWeek}
        AND p2.YEAR_MONTH = #{yearMonth2}
        LEFT JOIN performance_change p3 ON vde.customer_id = p3.customer_id
        AND vde.emp_id = p3.emp_id
        AND vde.organization_id = p3.organization_id
        AND p3.YEAR_MONTH = #{yearMonth3}
        AND p3.`type` = #{preWeek}
        WHERE vde.customer_id = #{customerId}
        AND vde.organization_id IN (
        SELECT
        t1.organization_id
        FROM
        dim_organization t1
        WHERE t1.customer_id = vde.customer_id
        AND locate(
            (
            SELECT t2.full_path
            FROM dim_organization t2
            WHERE t2.customer_id = t1.customer_id
            AND t2.organization_id = #{organizationId}
            ),
            t1.full_path
            )
        )
        ORDER BY dp.performance_key DESC, CONVERT (vde.user_name_ch USING gbk)
        LIMIT #{rowBounds.offset} , #{rowBounds.limit}
    </select>


    <select id="queryPerformanceDetailCount" resultType="int"  useCache="true">
        SELECT COUNT(1) FROM v_dim_emp vde
        INNER JOIN performance_change p1 ON vde.customer_id=p1.customer_id and vde.emp_id=p1.emp_id
        and p1.year_month=#{yearMonth1}
        AND p1.`type` = #{preWeek}
        INNER JOIN dim_performance dp ON dp.customer_id=vde.customer_id AND p1.performance_id=dp.performance_id
        LEFT JOIN performance_change p2 ON vde.customer_id=p2.customer_id
        and vde.emp_id=p2.emp_id and vde.organization_id=p2.organization_id
        and p2.year_month=#{yearMonth2}
        AND p2.`type` = #{preWeek}
        LEFT JOIN performance_change p3 ON vde.customer_id=p3.customer_id and vde.emp_id=p3.emp_id and
        vde.organization_id=p3.organization_id
        and p3.year_month=#{yearMonth3}
        AND p3.`type` = #{preWeek}
        WHERE vde.customer_id= #{customerId}
        AND vde.organization_id IN
        (
            SELECT t1.organization_id FROM dim_organization t1
            WHERE  t1.customer_id = vde.customer_id
            AND locate(
                (
                SELECT t2.full_path FROM dim_organization t2
                WHERE t2.customer_id = t1.customer_id
                AND t2.organization_id = #{organizationId}
                ),
                t1.full_path
            )
        )
    </select>

    <select id="queryEmpCount" resultType="net.chinahrd.entity.dto.app.performance.PerfChangeCountDto" useCache="true">
        SELECT DISTINCT
        count(e.emp_id) as total,
        sum(CASE WHEN s.curt_name='M' THEN 1 ELSE 0 END) as managerCount,
           sum(CASE WHEN s.curt_name='M' THEN 0 ELSE 1 END) as empCount
        FROM
        v_dim_emp e
        INNER JOIN dim_sequence s on s.customer_id=e.customer_id and s.sequence_id=e.sequence_id

        WHERE e.organization_id IN
        (
        SELECT t1.organization_id FROM dim_organization t1
        WHERE
        locate(
        (
        SELECT t.full_path FROM dim_organization t
        WHERE t.organization_id = #{organizationId}
        AND t.customer_id = t1.customer_id
        ), t1.full_path
        )
        AND t1.customer_id = e.customer_id
        )
        AND e.customer_id=#{customerId}
        and e.entry_date &lt;= #{yearMonth} AND (e.run_off_date>#{yearMonth} OR e.run_off_date is null)
    </select>
</mapper>